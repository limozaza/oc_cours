<?php

namespace OC\PlatformBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository
{

    //Pour L'application
    public function getAdvertWithCategories(array $categorieNames){
        $qb = $this->createQueryBuilder('a');
        $qb->innerJoin('a.categories','c')
            ->addSelect('c');
        $qb->where($qb->expr()->in('c.name',$categorieNames));
        return $qb->getQuery()->getResult();

    }

    public function getAdverts($page, $nbPerPage){
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.categories', 'c')
            ->addSelect('c')
            ->orderBy('a.date', 'DESC')
            ->getQuery()
        ;
        $query
            // On définit l'annonce à partir de laquelle commencer la liste
            ->setFirstResult(($page-1) * $nbPerPage)
            // Ainsi que le nombre d'annonce à afficher sur une page
            ->setMaxResults($nbPerPage)
        ;
        // Enfin, on retourne l'objet Paginator correspondant à la requête construite
        // (n'oubliez pas le use correspondant en début de fichier)
        return new Paginator($query, true);
    }

    // find all
    public function myFindAll(){
        $queryBuilder = $this->_em->createQueryBuilder('a');
        $query = $queryBuilder->getQuery();
        $results = $query->getResult();
        return $results;
    }
    // find one by id
    public function myFindOne($id){
        $queryBuilder = $this->createQueryBuilder('a')
                        ->where('a.id = :id')
                        ->setParameter('id',$id);

        return $queryBuilder->getQuery()->getResult();
    }
    // find by author and date
    public function findByAuthorAndDate($author, $year){
        $queryBuilder = $this->createQueryBuilder('a');
        $queryBuilder->where('a.author = :author')
            ->setParameter('author', $author)
            ->andWhere('a.date < :year')
            ->setParameter('year',$year)
            ->orderBy('a.date','DESC');

        return $queryBuilder->getQuery()->getResult();
    }
    //find all DQL
    public function myFindAllDQL(){
        $query = $this->_em->createQuery('SELECT a FROM OCPlatformBundle:Advert a');
        $results = $query->getResult();
        return $results;
    }
    // find one by id DQL
    public function myFindDQL($id){
        $query = $this->_em->createQuery('SELECT a FROM OCPlatformBundle:Advert a WHERE a.id = :id');
        $query->setParameter('id',$id);
        return $query->getSingleResult();
    }

    //Les jointures
    public function getAdvertWithApplications(){
        $queryBuilder = $this->createQueryBuilder('a')
            ->leftJoin('a.applications','app')
            ->addSelect('app');
        return $queryBuilder->getQuery()->getResult();
    }

}
